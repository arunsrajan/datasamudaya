<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.datasamudaya</groupId>
	<artifactId>datasamudaya</artifactId>
	<version>4.0</version>
	<packaging>jar</packaging>

	<name>datasamudaya</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.dependency.skip>false</maven.dependency.skip>
		<ignite.version>2.16.0</ignite.version>
		<calcite.version>1.38.0</calcite.version>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<main.basedir>${basedir}</main.basedir>
		<sonar.coverage.jacoco.xmlReportPaths>
			${project.basedir}/../coverage/target/site/jacoco-aggregate/jacoco.xml
		</sonar.coverage.jacoco.xmlReportPaths>
		<maven.javadoc.failOnError>false</maven.javadoc.failOnError>
		<akka.version>2.9.1</akka.version>
		<scala.binary.version>2.13</scala.binary.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.calcite</groupId>
			<artifactId>calcite-core</artifactId>
			<version>${calcite.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hive</groupId>
			<artifactId>hive-exec</artifactId>
			<version>4.0.1</version>
			<exclusions>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-slf4j-impl</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.curator</groupId>
					<artifactId>apache-curator</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<version>6.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-api-jdo</artifactId>
			<version>6.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-rdbms</artifactId>
			<version>6.0.8</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hive</groupId>
			<artifactId>hive-standalone-metastore-server</artifactId>
			<version>4.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hive</groupId>
			<artifactId>hive-standalone-metastore-common</artifactId>
			<version>4.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hive.hcatalog</groupId>
			<artifactId>hive-webhcat-java-client</artifactId>
			<version>4.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hive.hcatalog</groupId>
			<artifactId>hive-hcatalog-core</artifactId>
			<version>4.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hive.hcatalog</groupId>
			<artifactId>hive-hcatalog-server-extensions</artifactId>
			<version>4.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-pool2</artifactId>
			<version>2.12.0</version>
		</dependency>
		<dependency>
			<groupId>com.github.jsqlparser</groupId>
			<artifactId>jsqlparser</artifactId>
			<version>4.2</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-framework</artifactId>
			<version>5.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-client</artifactId>
			<version>5.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-recipes</artifactId>
			<version>5.6.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.curator</groupId>
			<artifactId>curator-test</artifactId>
			<version>5.6.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.18.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.18.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.18.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>33.3.0-jre</version>
		</dependency>
		<dependency>
			<groupId>biz.paluch.logging</groupId>
			<artifactId>logstash-gelf</artifactId>
			<version>1.5.1</version>
		</dependency>
		<dependency>
			<groupId>net.sf.trove4j</groupId>
			<artifactId>trove4j</artifactId>
			<version>3.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-hdfs</artifactId>
			<version>3.3.6</version>
			<exclusions>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-hdfs-client</artifactId>
			<version>3.3.6</version>
			<exclusions>
				<exclusion>
					<groupId>asm</groupId>
					<artifactId>asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>3.3.6</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-reload4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-yarn-client</artifactId>
			<version>3.3.6</version>
			<exclusions>
				<exclusion>
					<groupId>org.jline</groupId>
					<artifactId>jline</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jgrapht</groupId>
			<artifactId>jgrapht-core</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.jgrapht</groupId>
			<artifactId>jgrapht-io</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>com.caucho</groupId>
			<artifactId>hessian</artifactId>
			<version>4.0.66</version>
		</dependency>
		<dependency>
			<groupId>org.objenesis</groupId>
			<artifactId>objenesis</artifactId>
			<version>3.3</version>
		</dependency>
		<dependency>
			<groupId>com.esotericsoftware</groupId>
			<artifactId>kryo</artifactId>
			<version>5.6.0</version>
		</dependency>
		<dependency>
			<groupId>de.javakaffee</groupId>
			<artifactId>kryo-serializers</artifactId>
			<version>0.45</version>
		</dependency>
		<dependency>
			<groupId>org.burningwave</groupId>
			<artifactId>core</artifactId>
			<version>12.62.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.mesos</groupId>
			<artifactId>mesos</artifactId>
			<version>1.9.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java</artifactId>
			<version>3.7.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.protobuf</groupId>
			<artifactId>protobuf-java-util</artifactId>
			<version>3.7.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-yarn-core</artifactId>
			<version>2.5.0.RELEASE</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-yarn-client</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>4.3.9.RELEASE</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>4.3.9.RELEASE</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-yarn-batch</artifactId>
			<version>2.5.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-minicluster</artifactId>
			<version>3.3.6</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-yarn-server-tests</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-yarn-server-web-proxy</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.hadoop</groupId>
					<artifactId>hadoop-mapreduce-client-app</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-reload4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.17.0</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm</artifactId>
			<version>9.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-tree</artifactId>
			<version>9.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-analysis</artifactId>
			<version>9.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-util</artifactId>
			<version>9.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.asm</groupId>
			<artifactId>asm-commons</artifactId>
			<version>9.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.jooq</groupId>
			<artifactId>jool</artifactId>
			<version>0.9.14</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.8</version>
		</dependency>
		<dependency>
			<groupId>com.univocity</groupId>
			<artifactId>univocity-parsers</artifactId>
			<version>2.9.1</version>
		</dependency>
		<dependency>
			<groupId>de.siegmar</groupId>
			<artifactId>fastcsv</artifactId>
			<version>3.0.0</version>
		</dependency>
		<dependency>
			<groupId>com.github.dexecutor</groupId>
			<artifactId>dexecutor-core</artifactId>
			<version>2.1.4</version>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>1.4.200</version>
		</dependency>
		<dependency>
			<groupId>org.jgroups</groupId>
			<artifactId>jgroups</artifactId>
			<version>5.1.8.Final</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.xerial.snappy</groupId>
			<artifactId>snappy-java</artifactId>
			<version>1.1.8.4</version>
		</dependency>
		<dependency>
			<groupId>org.lz4</groupId>
			<artifactId>lz4-java</artifactId>
			<version>1.8.0</version>
		</dependency>
		<dependency>
			<groupId>org.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>3.10.5</version>
			<exclusions>
				<exclusion>
					<groupId>org.glassfish.jaxb</groupId>
					<artifactId>jaxb-runtime</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>2.3.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ignite</groupId>
			<artifactId>ignite-core</artifactId>
			<version>${ignite.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.ignite</groupId>
			<artifactId>ignite-urideploy</artifactId>
			<version>${ignite.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>com.pivovarit</groupId>
			<artifactId>parallel-collectors</artifactId>
			<version>2.5.0</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.36</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.11.2</version>
		</dependency>
		<dependency>
			<groupId>org.jline</groupId>
			<artifactId>jline</artifactId>
			<version>3.27.1</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>jp.co.yahoo.yosegi</groupId>
			<artifactId>yosegi</artifactId>
			<version>2.0.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.arrow</groupId>
			<artifactId>arrow-vector</artifactId>
			<version>12.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.arrow</groupId>
			<artifactId>arrow-memory-netty</artifactId>
			<version>12.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.pig</groupId>
			<artifactId>pig</artifactId>
			<version>0.17.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.orc</groupId>
			<artifactId>orc-core</artifactId>
			<version>1.7.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client-runtime</artifactId>
			<version>3.3.6</version>
		</dependency>
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient</artifactId>
			<version>0.16.0</version>
		</dependency>
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_httpserver</artifactId>
			<version>0.16.0</version>
		</dependency>
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_common</artifactId>
			<version>0.16.0</version>
		</dependency>
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_hotspot</artifactId>
			<version>0.16.0</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
			<version>1.12.2</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<version>1.12.2</version>
		</dependency>
		<dependency>
			<groupId>com.ea.agentloader</groupId>
			<artifactId>ea-agent-loader</artifactId>
			<version>1.0.3</version>
		</dependency>
		<!-- Akka Actors -->
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor-typed_${scala.binary.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-cluster-typed_${scala.binary.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-cluster-sharding-typed_${scala.binary.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>io.altoo</groupId>
			<artifactId>akka-kryo-serialization_2.13</artifactId>
			<version>2.5.2</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-slf4j_${scala.binary.version}</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor-testkit-typed_${scala.binary.version}</artifactId>
			<version>${akka.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.fabric8</groupId>
			<artifactId>kubernetes-client</artifactId>
			<version>4.11.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.ai</groupId>
			<artifactId>spring-ai-ollama</artifactId>
			<version>0.8.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-to-slf4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>6.1.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>6.1.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>6.1.4</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>6.1.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.20.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.20.0</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<excludeDefaultDirectories>true</excludeDefaultDirectories>
					<filesets>
						<fileset>
							<directory>target</directory>
							<followSymlinks>false</followSymlinks>
							<useDefaultExcludes>true</useDefaultExcludes>
							<excludes>
								<exclude>openjdk-21.0.2_linux-x64_bin.tar.gz</exclude>
							</excludes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version>
				<executions>
					<execution>
						<id>prepare</id>
						<phase>validate</phase>
						<configuration>
							<target name="copy files to web project">
								<echo message="prepare phase" />
								<mkdir dir="target/" />
								<mkdir dir="target/classes" />
								<delete dir="target/unpack" />
								<mkdir dir="target/unpack/opt/datasamudaya" />
								<gunzip
									src="distribution/target/datasamudaya-${project.version}-jdk21.tar.gz"
									dest="target/" />
								<untar src="target/datasamudaya-${project.version}-jdk21.tar"
									dest="target/unpack/opt/datasamudaya" />
								<mkdir dir="target/unpack/usr/local/java" />
								<gunzip src="target/openjdk-21.0.2_linux-x64_bin.tar.gz"
									dest="target/" />
								<untar src="target/openjdk-21.0.2_linux-x64_bin.tar"
									dest="target/unpack/usr/local/java" />
								<copy todir="target/datasamudayastandalone">
									<fileset dir="dockerdatasamudayastandalone" includes="entry.sh" />
									<fileset dir="dockerdatasamudayastandalone"
										includes="standalone.sh" />
									<fileset dir="dockerdatasamudayastandalone"
										includes="entrywithoutdn.sh" />
								</copy>
								<copy todir="target/datasamudayacontainer">
									<fileset dir="dockerdatasamudayacontainer" includes="entry.sh" />
									<fileset dir="dockerdatasamudayacontainer"
										includes="container.sh" />
									<fileset dir="dockerdatasamudayacontainer"
										includes="entrywithoutdn.sh" />
								</copy>
								<fixcrlf srcdir="target/unpack/opt/datasamudaya" eol="unix"
									includes="**/*.sh" />
								<fixcrlf srcdir="target/datasamudayastandalone" eol="unix"
									includes="*.sh" />
								<fixcrlf srcdir="target/datasamudayacontainer" eol="unix"
									includes="*.sh" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<executable>curl</executable>
					<arguments>
						<argument>https://download.java.net/java/GA/jdk21.0.2/f2283984656d49d69e91c558476027ac/13/GPL/openjdk-21.0.2_linux-x64_bin.tar.gz</argument>
						<argument>--ssl-no-revoke</argument>
						<argument>--output</argument>
						<argument>target/openjdk-21.0.2_linux-x64_bin.tar.gz</argument>
					</arguments>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.4.0.905</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>modules</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.8.1</version>
						<configuration>
							<release>17</release>
							<source>17</source>
							<target>17</target>
							<forceJavacCompilerUse>true</forceJavacCompilerUse>
						</configuration>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>compile</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>3.0.0-M4</version>
						<configuration>
							<testFailureIgnore>true</testFailureIgnore>
							<forkCount>3</forkCount>
							<reuseForks>true</reuseForks>
							<argLine>@{jacocoArgLine} --enable-preview</argLine>
							<excludes>
								<exclude>**/*Test.java</exclude>
								<exclude>**/*TestSuite2.java</exclude>
								<exclude>**/StreamPipelineBase.java</exclude>
								<exclude>**/StreamPipelineBiggerFileTest.java</exclude>
							</excludes>
							<includes>
								<include>**/CommonsTestSuite.java</include>
								<include>**/PipelineExecutorsTestSuite.java</include>
								<include>**/StreamPipelineTestSuite.java</include>
							</includes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4</version><!--$NO-MVN-MAN-VER$ -->
						<configuration>
							<descriptors>
								<descriptor>assembly/assembly.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>distro-assembly</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<skipAssembly>${skip.assemblyxml}</skipAssembly>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>3.1.0</version>
						<executions>
							<execution>
								<id>copy-resources-dockerdatasamudayacontainer</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${session.executionRootDirectory}/dockerdatasamudayacontainer</outputDirectory>
									<resources>
										<resource>
											<directory>${session.executionRootDirectory}/target</directory>
											<includes>
												<include>datasamudaya-${project.version}-jdk21.tar.gz</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-resources-dockerdatasamudayatss</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${session.executionRootDirectory}/dockerdatasamudayatss</outputDirectory>
									<resources>
										<resource>
											<directory>${session.executionRootDirectory}/target</directory>
											<includes>
												<include>datasamudaya-${project.version}-jdk21.tar.gz</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-resources-dockerdatasamudayats</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${session.executionRootDirectory}/dockerdatasamudayats</outputDirectory>
									<resources>
										<resource>
											<directory>${session.executionRootDirectory}/target</directory>
											<includes>
												<include>datasamudaya-${project.version}-jdk21.tar.gz</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>copy-resources-dockerdatasamudayastandalone</id>
								<phase>validate</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${session.executionRootDirectory}/dockerdatasamudayastandalone</outputDirectory>
									<resources>
										<resource>
											<directory>${session.executionRootDirectory}/target</directory>
											<includes>
												<include>datasamudaya-${project.version}-jdk21.tar.gz</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<modules>
				<module>taskexecutor</module>
				<module>taskscheduler</module>
				<module>common</module>
				<module>pipeline</module>
				<module>examples</module>
			</modules>
		</profile>
		<profile>
			<id>datasamudaya</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.google.cloud.tools</groupId>
						<artifactId>jib-maven-plugin</artifactId>
						<version>3.2.0</version>
						<executions>
							<execution>
								<id>buildstandalonewithdatanode</id>
								<phase>package</phase>
								<goals>
									<goal>dockerBuild</goal>
								</goals>
								<configuration>
									<containerizingMode>exploded</containerizingMode>
									<from>
										<image>bde2020/hadoop-datanode</image>
									</from>
									<to>
										<image>arunsrajan/datasamudayastandalonedn</image>
										<tags>
											<tag>latest</tag>
										</tags>
									</to>
									<extraDirectories>
										<paths>
											<path>
												<from>target/unpack</from>
												<into>/</into>
											</path>
											<path>
												<from>dockerdatasamudayastandalone</from>
												<into>/opt/datasamudaya/config</into>
												<includes>datasamudaya.properties</includes>
											</path>
											<path>
												<from>target/datasamudayastandalone</from>
												<into>/</into>
												<includes>entry.sh</includes>
											</path>
											<path>
												<from>target/datasamudayastandalone</from>
												<into>/opt/datasamudaya/sbin</into>
												<includes>standalone.sh</includes>
											</path>
										</paths>
										<permissions>
											<permission>
												<file>/opt/datasamudaya/sbin/*</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/entry.sh</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/entrypoint.sh</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/run.sh</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/usr/local/java/jdk-21.0.2/**/**</file>
												<mode>755</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/etc/hadoop/**/**</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/opt/hadoop-3.2.1/**/**</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
										</permissions>
									</extraDirectories>
									<container>
										<environment>
											<CORE_CONF_fs_defaultFS>hdfs://namenode:9000</CORE_CONF_fs_defaultFS>
											<HDFS_CONF_dfs_datanode_data_dir>file:///opt/dockershare/data</HDFS_CONF_dfs_datanode_data_dir>
										</environment>
										<volumes>
											/opt/dockershare/data
										</volumes>
										<entrypoint>
										    <arg>bash</arg>
										    <arg>-ex</arg>
											<arg>/entry.sh</arg>
										</entrypoint>
										<format>Docker</format>
									</container>
								</configuration>
							</execution>
							
							<execution>
								<id>buildstandalone</id>
								<phase>package</phase>
								<goals>
									<goal>dockerBuild</goal>
								</goals>
								<configuration>
									<containerizingMode>exploded</containerizingMode>
									<from>
										<image>centos:latest</image>
									</from>
									<to>
										<image>arunsrajan/datasamudayastandalone</image>
										<tags>
											<tag>latest</tag>
										</tags>
									</to>
									<extraDirectories>
										<paths>
											<path>
												<from>target/unpack</from>
												<into>/</into>
											</path>
											<path>
												<from>target/datasamudayastandalone</from>
												<into>/</into>
												<includes>entrywithoutdn.sh</includes>
											</path>
											<path>
												<from>dockerdatasamudayastandalone</from>
												<into>/opt/datasamudaya/config</into>
												<includes>datasamudaya.properties</includes>
											</path>											
											<path>
												<from>target/datasamudayastandalone</from>
												<into>/opt/datasamudaya/sbin</into>
												<includes>standalone.sh</includes>
											</path>
										</paths>
										<permissions>
											<permission>
												<file>/opt/datasamudaya/sbin/*</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/entrywithoutdn.sh</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/usr/local/java/jdk-21.0.2/**/**</file>
												<mode>755</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>											
										</permissions>
									</extraDirectories>
									<container>
										<environment>
											<CORE_CONF_fs_defaultFS>hdfs://namenode:9000</CORE_CONF_fs_defaultFS>
											<HDFS_CONF_dfs_datanode_data_dir>file:///opt/dockershare/data</HDFS_CONF_dfs_datanode_data_dir>
										</environment>
										<volumes>
											/opt/dockershare/data
										</volumes>
										<entrypoint>
										    <arg>bash</arg>
										    <arg>-ex</arg>
											<arg>/entrywithoutdn.sh</arg>
										</entrypoint>
										<format>Docker</format>
									</container>
								</configuration>
							</execution>


							<execution>
								<id>buildcontainerwithdatanode</id>
								<phase>package</phase>
								<goals>
									<goal>dockerBuild</goal>
								</goals>
								<configuration>
									<containerizingMode>exploded</containerizingMode>
									<from>
										<image>bde2020/hadoop-datanode</image>
									</from>
									<to>
										<image>arunsrajan/datasamudayacontainerdn</image>
										<tags>
											<tag>latest</tag>
										</tags>
									</to>
									<extraDirectories>
										<paths>
											<path>
												<from>target/unpack</from>
												<into>/</into>
											</path>
											<path>
												<from>dockerdatasamudayacontainer</from>
												<into>/opt/datasamudaya/config</into>
												<includes>datasamudaya.properties</includes>
											</path>
											<path>
												<from>target/datasamudayacontainer</from>
												<into>/</into>
												<includes>entry.sh</includes>
											</path>
											<path>
												<from>target/datasamudayacontainer</from>
												<into>/opt/datasamudaya/sbin</into>
												<includes>container.sh</includes>
											</path>
										</paths>
										<permissions>
											<permission>
												<file>/opt/datasamudaya/sbin/*</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/entry.sh</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/entrypoint.sh</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/run.sh</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/usr/local/java/jdk-21.0.2/**/**</file>
												<mode>755</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/etc/hadoop/**/**</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/opt/hadoop-3.2.1/**/**</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
										</permissions>
									</extraDirectories>
									<container>
										<environment>
											<CORE_CONF_fs_defaultFS>hdfs://namenode:9000</CORE_CONF_fs_defaultFS>
											<HDFS_CONF_dfs_datanode_data_dir>file:///opt/dockershare/data</HDFS_CONF_dfs_datanode_data_dir>
										</environment>
										<volumes>
											/opt/dockershare/data
										</volumes>
										<entrypoint>
											<arg>bash</arg>
										    <arg>-ex</arg>
											<arg>/entry.sh</arg>
										</entrypoint>
										<format>Docker</format>
									</container>
								</configuration>
							</execution>
							
							<execution>
								<id>buildcontainer</id>
								<phase>package</phase>
								<goals>
									<goal>dockerBuild</goal>
								</goals>
								<configuration>
									<containerizingMode>exploded</containerizingMode>
									<from>
										<image>centos:latest</image>
									</from>
									<to>
										<image>arunsrajan/datasamudayacontainer</image>
										<tags>
											<tag>latest</tag>
										</tags>
									</to>
									<extraDirectories>
										<paths>
											<path>
												<from>target/unpack</from>
												<into>/</into>
											</path>
											<path>
												<from>dockerdatasamudayacontainer</from>
												<into>/opt/datasamudaya/config</into>
												<includes>datasamudaya.properties</includes>
											</path>
											<path>
												<from>target/datasamudayacontainer</from>
												<into>/</into>
												<includes>entrywithoutdn.sh</includes>
											</path>
											<path>
												<from>target/datasamudayacontainer</from>
												<into>/opt/datasamudaya/sbin</into>
												<includes>container.sh</includes>
											</path>
										</paths>
										<permissions>
											<permission>
												<file>/opt/datasamudaya/sbin/*</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/entrywithoutdn.sh</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/usr/local/java/jdk-21.0.2/**/**</file>
												<mode>755</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/etc/hadoop/**/**</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/opt/hadoop-3.2.1/**/**</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
										</permissions>
									</extraDirectories>
									<container>
										<environment>
											<CORE_CONF_fs_defaultFS>hdfs://namenode:9000</CORE_CONF_fs_defaultFS>
											<HDFS_CONF_dfs_datanode_data_dir>file:///opt/dockershare/data</HDFS_CONF_dfs_datanode_data_dir>
										</environment>
										<volumes>
											/opt/dockershare/data
										</volumes>
										<entrypoint>
											<arg>bash</arg>
										    <arg>-ex</arg>
											<arg>/entrywithoutdn.sh</arg>
										</entrypoint>
										<format>Docker</format>
									</container>
								</configuration>
							</execution>
							
							<execution>
								<id>buildzookeeper</id>
								<phase>package</phase>
								<goals>
									<goal>dockerBuild</goal>
								</goals>
								<configuration>
									<containerizingMode>exploded</containerizingMode>
									<from>
										<image>centos:latest</image>
									</from>
									<to>
										<image>arunsrajan/datasamudayazk</image>
										<tags>
											<tag>latest</tag>
										</tags>
									</to>
									<extraDirectories>
										<paths>
											<path>
												<from>target/unpack</from>
												<into>/</into>
											</path>
											<path>
												<from>dockerzk</from>
												<into>/opt/datasamudaya/config</into>
												<includes>datasamudaya.properties</includes>
											</path>
											<path>
												<from>dockerzk</from>
												<into>/opt/datasamudaya/sbin</into>
												<includes>zookeeper.sh</includes>
											</path>
										</paths>
										<permissions>
											<permission>
												<file>/opt/datasamudaya/sbin/*</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/usr/local/java/jdk-21.0.2/**/**</file>
												<mode>755</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
										</permissions>
									</extraDirectories>
									<container>
										<volumes>
											/opt/dockershare/data
										</volumes>
										<entrypoint>
										    <arg>bash</arg>
										    <arg>-ex</arg>
											<arg>/opt/datasamudaya/sbin/zookeeper.sh</arg>
										</entrypoint>
										<format>Docker</format>
									</container>
								</configuration>
							</execution>
					
							<execution>
								<id>buildtaskschedulerstream</id>
								<phase>package</phase>
								<goals>
									<goal>dockerBuild</goal>
								</goals>
								<configuration>
									<containerizingMode>exploded</containerizingMode>
									<from>
										<image>ubuntu</image>
									</from>
									<to>
										<image>192.168.59.101:32225/arunsrajan/datasamudayataskschedulerstream</image>
										<tags>
											<tag>latest</tag>
										</tags>
									</to>
									<extraDirectories>
										<paths>
											<path>
												<from>target/unpack</from>
												<into>/</into>
											</path>
											<path>
												<from>dockerdatasamudayatss</from>
												<into>/opt/datasamudaya/config</into>
												<includes>datasamudaya.properties</includes>
											</path>
											<path>
												<from>dockerdatasamudayatss</from>
												<into>/opt/datasamudaya/bin</into>
												<includes>taskschedulerstream.sh</includes>
											</path>
										</paths>
										<permissions>
											<permission>
												<file>/opt/datasamudaya/bin/*</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/usr/local/java/jdk-21.0.2/**/**</file>
												<mode>755</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
										</permissions>
									</extraDirectories>
									<container>
										<environment>
											<CORE_CONF_fs_defaultFS>hdfs://namenode:9000</CORE_CONF_fs_defaultFS>
											<HDFS_CONF_dfs_datanode_data_dir>file:///opt/dockershare/data</HDFS_CONF_dfs_datanode_data_dir>
										</environment>
										<volumes>
											/opt/dockershare/data
										</volumes>
										<entrypoint>
											<arg>./opt/datasamudaya/bin/taskschedulerstream.sh</arg>
										</entrypoint>
										<format>Docker</format>
										<user>arun</user>
									</container>
								</configuration>
							</execution>
							<execution>
								<id>buildtaskscheduler</id>
								<phase>package</phase>
								<goals>
									<goal>dockerBuild</goal>
								</goals>
								<configuration>
									<containerizingMode>exploded</containerizingMode>
									<from>
										<image>ubuntu</image>
									</from>
									<to>
										<image>192.168.59.101:32225/arunsrajan/datasamudayataskscheduler</image>
										<tags>
											<tag>latest</tag>
										</tags>
									</to>
									<extraDirectories>
										<paths>
											<path>
												<from>target/unpack</from>
												<into>/</into>
											</path>
											<path>
												<from>dockerdatasamudayats</from>
												<into>/opt/datasamudaya/config</into>
												<includes>datasamudaya.properties</includes>
											</path>
											<path>
												<from>dockerdatasamudayats</from>
												<into>/opt/datasamudaya/bin</into>
												<includes>taskscheduler.sh</includes>
											</path>
											<path>
												<from>dockerdatasamudayats</from>
												<into>/opt/datasamudaya/bin</into>
												<includes>tasksubmitter.sh</includes>
											</path>
										</paths>
										<permissions>
											<permission>
												<file>/opt/datasamudaya/bin/*</file>
												<mode>777</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
											<permission>
												<file>/usr/local/java/jdk-21.0.2/**/**</file>
												<mode>755</mode> <!-- Read/write/execute for owner, read/execute for group/other -->
											</permission>
										</permissions>
									</extraDirectories>
									<container>
										<environment>
											<CORE_CONF_fs_defaultFS>hdfs://namenode:9000</CORE_CONF_fs_defaultFS>
											<HDFS_CONF_dfs_datanode_data_dir>file:///opt/dockershare/data</HDFS_CONF_dfs_datanode_data_dir>
										</environment>
										<volumes>
											/opt/dockershare/data
										</volumes>
										<entrypoint>
											<arg>/opt/datasamudaya/bin/taskscheduler.sh</arg>
										</entrypoint>
										<format>Docker</format>
										<user>arun</user>
									</container>
								</configuration>
							</execution>
						</executions>

					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<repositories>
		<repository>
			<id>mavencentral</id>
			<url>https://repo.maven.apache.org/maven2</url>
		</repository>
		<repository>
			<id>mavenrepo</id>
			<url>https://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>clojars</id>
			<url>http://clojars.org/repo/</url>
		</repository>
		<repository>
			<id>akka-repository</id>
			<name>Akka library repository</name>
			<url>https://repo.akka.io/maven</url>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>clojars</id>
			<url>http://clojars.org/repo/</url>
		</pluginRepository>
	</pluginRepositories>

</project>