PipelineConfig pipelineconfig = new PipelineConfig();
pipelineconfig.setBlocksize("64");
pipelineconfig.setNumberofcontainers("1");
pipelineconfig.setMaxmem("1024");
pipelineconfig.setMinmem("1024");
pipelineconfig.setLocal("false")
pipelineconfig.setJgroups("false")
pipelineconfig.setMesos("false")
pipelineconfig.setYarn("false")
pipelineconfig.setOutput(new Output(System.out));
pipelineconfig.setIsblocksuserdefined("true");
pipelineconfig.setBlocksize("64");
pipelineconfig.setMode(DataSamudayaConstants.MODE_NORMAL);
var datastream = StreamPipeline.newStreamHDFS("hdfs://127.0.0.1:9000", "/airline1989", pipelineconfig);
var mappair1 = datastream.map(dat -> dat.split(",")).filter(dat -> !"ArrDelay".equals(dat[14]) && !"NA".equals(dat[14])).mapToPair(dat -> Tuple.tuple(dat[8], Long.parseLong(dat[14])));
var airlinesamples = mappair1.reduceByKey((dat1, dat2) -> dat1 + dat2).coalesce(1,(dat1, dat2) -> dat1 + dat2);
var datastream1 = StreamPipeline.newStreamHDFS("hdfs://127.0.0.1:9000", "/carriers", pipelineconfig);
var carriers = datastream1.map(linetosplit -> linetosplit.split(",")).mapToPair(line -> new Tuple2(line[0].substring(1, line[0].length() - 1),line[1].substring(1, line[1].length() - 1)));
var result = carriers.join(airlinesamples, (tuple1, tuple2) -> ((Tuple2) tuple1).v1.equals(((Tuple2) tuple2).v1)).collect(true,null);