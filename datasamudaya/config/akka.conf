akka.cluster.sharding { 
  	number-of-shards = 10
}
akka.cluster.min-nr-of-members = 1
akka.cluster.role {
  backend.min-nr-of-members = 1
}
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-config-on-start = on
  log-dead-letters = 100
  log-dead-letters-during-shutdown = on
  logger-startup-timeout = 30s
  serialization-message-maximum-size = 500 MiB
  cluster {
    roles = ["backend"]
   	downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }
  actor {
	fifo-mailbox {
	  mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
	  mailbox-capacity = 1000
	  mailbox-push-timeout-time = 120s
	}
	mailbox {
	  requirements{
		"akka.dispatch.BoundedMessageQueueSemantics" = fifo-mailbox
	  }
	}
    debug {
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill etc.)
      autoreceive = on
	  unhandled = on
    }
    allow-java-serialization = off
    provider = "cluster"	
	serializers {
	  java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
	  kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
    }
	serialization-bindings {
	  "com.github.datasamudaya.common.utils.DiskSpillingList" = kryo
	  "com.github.datasamudaya.common.utils.DiskSpillingSet" = kryo
      "com.google.protobuf.Message" = proto
	  "com.github.datasamudaya.common.ShuffleBlock" = kryo
	  "com.github.datasamudaya.common.OutputObject" = kryo
	}
  }
  remote {
    artery {
      enabled = on
	  log-received-messages = on
	  log-frame-size-exceeding = 5MiB
      canonical.hostname = "%s"
      canonical.port = %s
	  large-message-destinations = ["/user/*"]
      advanced {
		tcp.outbound-client-hostname = "%s"
        maximum-frame-size = 5MiB
        buffer-pool-size = 128
        maximum-large-frame-size = 130MiB
        large-buffer-pool-size = 32
      }
    }
  }
}
akka-kryo-serialization {
  type = "graph"
  id-strategy = "default"
  buffer-size = 4096
  max-buffer-size = -1
  queue-builder = "io.altoo.akka.serialization.kryo.DefaultQueueBuilder"

  use-manifests = false

  use-unsafe = false

  post-serialization-transformations = "off"

  implicit-registration-logging = false

  kryo-trace = false

  kryo-reference-map = true

  kryo-initializer = "com.github.datasamudaya.common.utils.AkkaKryoInitializer"

  resolve-subclasses = false

  mappings {
    # fully.qualified.classname1 = id1
    # fully.qualified.classname2 = id2
  }

 
  classes = [
    # fully.qualified.classname1
    # fully.qualified.classname2
  ]

 
  optional-basic-mappings {
    // java
    "java.util.UUID" = 30

    "java.time.LocalDate" = 31
    "java.time.LocalDateTime" = 32
    "java.time.LocalTime" = 33
    "java.time.ZoneOffset" = 34
    "java.time.ZoneRegion" = 35
    "java.time.ZonedDateTime" = 36
    "java.time.Instant" = 37
    "java.time.Duration" = 38

    // scala
    "scala.Some" = 50
    "scala.None$" = 51
    "scala.util.Left" = 52
    "scala.util.Right" = 53
    "scala.util.Success" = 54
    "scala.util.Failure" = 55

    "scala.Tuple2" = 60
    "scala.Tuple3" = 61
    "scala.Tuple4" = 62
    "scala.Tuple5" = 63
    "scala.Tuple6" = 64
    "scala.Tuple7" = 65
    "scala.Tuple8" = 66
  }

  optional-scala2_12-mappings = {
    "scala.collection.immutable.Nil$" = 70
    "scala.collection.immutable.$colon$colon" = 71
    "scala.collection.immutable.Map$EmptyMap$" = 72
    "scala.collection.immutable.Map$Map1" = 73
    "scala.collection.immutable.Map$Map2" = 74
    "scala.collection.immutable.Map$Map3" = 75
    "scala.collection.immutable.Map$Map4" = 76
    "scala.collection.immutable.Set$EmptySet$" = 77
    "scala.collection.immutable.Set$Set1" = 78
    "scala.collection.immutable.Set$Set2" = 79
    "scala.collection.immutable.Set$Set3" = 80
    "scala.collection.immutable.Set$Set4" = 81
    "scala.collection.immutable.ArraySeq$ofRef" = 82
    "scala.collection.immutable.ArraySeq$ofInt" = 83
    "scala.collection.immutable.ArraySeq$ofDouble" = 84
    "scala.collection.immutable.ArraySeq$ofLong" = 85
    "scala.collection.immutable.ArraySeq$ofFloat" = 86
    "scala.collection.immutable.ArraySeq$ofChar" = 87
    "scala.collection.immutable.ArraySeq$ofByte" = 88
    "scala.collection.immutable.ArraySeq$ofShort" = 89
    "scala.collection.immutable.ArraySeq$ofBoolean" = 90
    "scala.collection.immutable.ArraySeq$ofUnit" = 91
  }

  # note: Vector is only available from 2.13.2 and above - for 2.13.0 or 2.13.1 use the optional-scala2_12-mappings
  optional-scala2_13-mappings = {
    "scala.collection.immutable.Nil$" = 70
    "scala.collection.immutable.$colon$colon" = 71
    "scala.collection.immutable.Map$EmptyMap$" = 72
    "scala.collection.immutable.Map$Map1" = 73
    "scala.collection.immutable.Map$Map2" = 74
    "scala.collection.immutable.Map$Map3" = 75
    "scala.collection.immutable.Map$Map4" = 76
    "scala.collection.immutable.Set$EmptySet$" = 77
    "scala.collection.immutable.Set$Set1" = 78
    "scala.collection.immutable.Set$Set2" = 79
    "scala.collection.immutable.Set$Set3" = 80
    "scala.collection.immutable.Set$Set4" = 81
    "scala.collection.immutable.ArraySeq$ofRef" = 82
    "scala.collection.immutable.ArraySeq$ofInt" = 83
    "scala.collection.immutable.ArraySeq$ofDouble" = 84
    "scala.collection.immutable.ArraySeq$ofLong" = 85
    "scala.collection.immutable.ArraySeq$ofFloat" = 86
    "scala.collection.immutable.ArraySeq$ofChar" = 87
    "scala.collection.immutable.ArraySeq$ofByte" = 88
    "scala.collection.immutable.ArraySeq$ofShort" = 89
    "scala.collection.immutable.ArraySeq$ofBoolean" = 90
    "scala.collection.immutable.ArraySeq$ofUnit" = 91
    "scala.collection.immutable.Vector0$" = 92
    "scala.collection.immutable.Vector1" = 93
    "scala.collection.immutable.Vector2" = 94
    "scala.collection.immutable.Vector3" = 95
    "scala.collection.immutable.Vector4" = 96
    "scala.collection.immutable.Vector5" = 97
    "scala.collection.immutable.Vector6" = 98
  }
}